const express = require('express');
const router = express.Router();
const Log = require('../models/logs')

// Seed Route
router.get("/seed", (req, res) => {
    Log.create([
      {
        title:'grapefruit',
        entry:'pink',
        shipIsBroken: true
      },
      {
        title:'grapefruit',
        entry:'pink',
        shipIsBroken: true
      },
      {
        title:'grapefruit',
        entry:'pink',
        shipIsBroken: true
      }
    ], (err, data) => {
    //   res.redirect("/logs")
    console.log(data);
    })
  })

// INDEX
router.get('/', (req, res) => {
    Log.find({}, (err, allLogs) => {
        if(!err) {
            res.status(200).render('Index', {
                logs: allLogs
            })
        } else {
            res.status(400).send(err)
        }
    })
})

// NEW
router.get('/new', (req, res) => {
    res.render('New');
})

// DELETE
router.delete('/:id', (req, res) => {
    req.body.shipIsBroken = req.body.shipIsBroken === 'on' ? true : false;
    Log.findByIdAndDelete(req.params.id, req.body, (err, updatedLog) => {
        if(!err) {
            res.status(200).redirect(`/logs`)
        } else {
            res.status(400). send(err);
        }
    })
})

// UPDATE
router.put('/:id', (req, res) => {
    req.body.shipIsBroken = req.body.shipIsBroken === 'on' ? true : false;
    Log.findByIdAndUpdate(req.params.id, req.body, (err, updatedLog) => {
        if(!err) {
            res.status(200).redirect(`/logs/${req.params.id}`)
        } else {
            res.status(400).send(err)
        }
    })
})

// CREATE
router.post('/', (req, res) => {
    req.body.shipIsBroken = req.body.shipIsBroken === 'on' ? true : false;

    Log.create(req.body, (err, createdLog) => {
        if(!err) {
            res.status(200).redirect('/logs');
        } else {
            res.status(400).send(err);
        }
    });
})

// EDIT
router.get('/:id/edit', (req,res) => {
    Log.findById(req.params.id, (err, foundLog) => {
        if(!err) {
            res.status(200).render('Edit', {logs: foundLog})
        } else {
            res.status(400).send(err);
        }
    })
})

// SHOW
router.get('/:id', (req, res) => {
    Log.findById(req.params.id, (err, foundLog) => {
        if(!err) {
            res.status(200).render('Show', {
                logs: foundLog
            })
        } else {
            res.status(400).send(err)
        }
    })
})

module.exports = router;